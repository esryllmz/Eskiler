<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QcXj8f8B3viaLstPDUYAAAAASUVORK5CYII=
</value>
  </data>
</root>